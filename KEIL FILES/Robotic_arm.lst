C51 COMPILER V6.12  ROBOTIC_ARM                                                            06/13/2021 20:45:13 PAGE 1   


C51 COMPILER V6.12, COMPILATION OF MODULE ROBOTIC_ARM
OBJECT MODULE PLACED IN .\Robotic_arm.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\Downloads\C FILES\Robotic_arm.c DEBUG OBJECTEXTEND PRINT(.\Robotic_arm.l
                    -st) OBJECT(.\Robotic_arm.obj) 

stmt level    source

   1          #include <reg51.h>
   2          
   3          unsigned char data1[] = {0x01,0x02,0x04,0x08};      //0000 0001, 0000 0010, 0000 0100, 0000 1000.
   4                                                              //rotates the motor anti-clockwise.
   5          unsigned char data2[] = {0x08,0x04,0x02,0x01};      //0000 1000, 0000 0100, 0000 0010, 0000 0001.
   6                                                              //rotates the motor clockwise.
   7                                                              //data1 and data2 inits first 4 pins of Port 2 and 3.
   8          unsigned char data3[] = {0x10, 0x20, 0x40, 0x80};   //0001 0000, 0010 0000, 0100 0000, 1000 0000.
   9                                                              //rotates the motor anti-clockwise.
  10          unsigned char data4[] = {0x80, 0x40, 0x20, 0x10};   //1000 0000, 0100 0000, 0010 0000, 0001 0000.
  11                                                              //rotates the motor clockwise.
  12                                                              //data3 and data4 inits first 4 pins of Port 2 and 3.
  13          
  14          unsigned char x,y;
  15          int input,bit1,bit2;         //Global parameters to be accessed in functions.
  16          
  17          sbit R0 = P1^0;              //Assigning variables to pins for accessing.
  18          sbit R1 = P1^1;
  19          sbit R2 = P1^2;
  20          sbit R3 = P1^3;
  21          sbit C0 = P1^4;
  22          sbit C1 = P1^5;
  23          sbit C2 = P1^6;
  24          
  25          void delay();
  26          
  27          void upward();
  28          
  29          void downward();
  30          
  31          void forward();
  32          
  33          void reverse();
  34          
  35          void left();
  36          
  37          void right();
  38          
  39          void gripclose();
  40          
  41          void gripopen();
  42          
  43          void stop();
  44          
  45          int check();
  46          
  47          void takeInput();
  48          
  49          void takeInput()         //takes distance units from keypad for the movement of robotic arm (Servo Motors)
             -.
  50          {                        //distance units = (number of rotations).
  51   1      	int s =0;
  52   1      	next:
  53   1      	if (R0 == 1){
C51 COMPILER V6.12  ROBOTIC_ARM                                                            06/13/2021 20:45:13 PAGE 2   

  54   2      		if (C0 == 1)
  55   2      		{
  56   3      			delay();
  57   3      			s++;
  58   3      			if (s==1)
  59   3      			{
  60   4      				bit1 = 1;
  61   4      			}
  62   3      			else if (s==2)
  63   3      			{
  64   4      				bit2 = 1;
  65   4      				return ;
  66   4      			}
  67   3      		}
  68   2      		else if (C1 == 1)
  69   2      		{
  70   3      			delay();
  71   3      			s++;
  72   3      			if (s==1)
  73   3      			{
  74   4      				bit1 = 2;
  75   4      			}
  76   3      			else if (s==2)
  77   3      			{
  78   4      				bit2 = 2;
  79   4      				return ;
  80   4      			}
  81   3      		}
  82   2      		else if (C2 == 1)
  83   2      		{
  84   3      			delay();
  85   3      			s++;
  86   3      			if (s==1)
  87   3      			{
  88   4      				bit1 = 3;
  89   4      			}
  90   3      			else if (s==2)
  91   3      			{
  92   4      				bit2 = 3;
  93   4      				return;
  94   4      			}
  95   3      		}}
  96   1      
  97   1      	else if (R1 == 1){
  98   2      		if (C0 == 1)
  99   2      		{
 100   3      			delay();
 101   3      			s++;
 102   3      			if (s==1)
 103   3      			{
 104   4      				bit1 = 4;
 105   4      			}
 106   3      			else if (s==2)
 107   3      			{
 108   4      				bit2 = 4;
 109   4      				return;
 110   4      			}}
 111   2      		else if (C1 == 1)
 112   2      		{
 113   3      			delay();
 114   3      			s++;
 115   3      			if (s==1)
C51 COMPILER V6.12  ROBOTIC_ARM                                                            06/13/2021 20:45:13 PAGE 3   

 116   3      			{
 117   4      				bit1 = 5;
 118   4      			}
 119   3      			else if (s==2)
 120   3      			{
 121   4      				bit2 = 5;
 122   4      				return;
 123   4      			}}
 124   2      		else if (C2 == 1)
 125   2      			{
 126   3      				delay();
 127   3      				s++;
 128   3      				if (s==1)
 129   3      				{
 130   4      					bit1 = 6;
 131   4      				}
 132   3      				else if (s==2)
 133   3      				{
 134   4      					bit2 = 6;
 135   4      					return;
 136   4      				}}}
 137   1      	
 138   1      	else if (R2 == 1){
 139   2      		if (C0 == 1)
 140   2      		{
 141   3      			delay();
 142   3      			s++;
 143   3      			if (s==1)
 144   3      			{
 145   4      				bit1 = 7;
 146   4      			}
 147   3      			else if (s==2)
 148   3      			{
 149   4      				bit2 = 7;
 150   4      				return;
 151   4      			}}
 152   2      		else if (C1 == 1)
 153   2      		{
 154   3      			delay();
 155   3      			s++;
 156   3      			if (s==1)
 157   3      			{
 158   4      				bit1 = 8;
 159   4      			}
 160   3      			else if (s==2)
 161   3      			{
 162   4      				bit2 = 8;
 163   4      				return;
 164   4      			}}
 165   2      		else if (C2 == 1)
 166   2      		{
 167   3      			delay();
 168   3      			s++;
 169   3      			if (s==1)
 170   3      			{
 171   4      				bit1 = 9;
 172   4      			}
 173   3      			else if (s==2)
 174   3      			{
 175   4      				bit2 = 9;
 176   4      				return;
 177   4      			}}}
C51 COMPILER V6.12  ROBOTIC_ARM                                                            06/13/2021 20:45:13 PAGE 4   

 178   1      	
 179   1      	if (R3 == 1)
 180   1      	{
 181   2      		if (C1 ==1)
 182   2      		{
 183   3      			delay();
 184   3      			s++;
 185   3      			if (s==1)
 186   3      			{
 187   4      				bit1 = 0;
 188   4      			}
 189   3      			else if (s==2)
 190   3      			{
 191   4      				bit2 = 0;
 192   4      				return;
 193   4      			}}}
 194   1      	goto next;
 195   1      }
 196          
 197          void main(void)
 198          {
 199   1      start:                  //start Label.
 200   1      	P1 = 0xFF;      //Port 1 pins initialized FFFFh (1111 1111 1111 1111) for Input from Keypad.            
 201   1      	P2 = 0x00;      //Port 2 pins initialized 0000h (0000 0000 0000 0000) for Output to Servo Motor 1 and 2.
 202   1      	P3 = 0x00;      //Port 3 pins initialized 0000h (0000 0000 0000 0000) for Output to Servo Motor 3 and 4.
 203   1      
 204   1      	if (R0 == 1){
 205   2      		if (C0 == 1)         //1 is pressed from Keypad.
 206   2      		{
 207   3      			delay();     //delay fucntion for delay.
 208   3      			takeInput();
 209   3      			input = (bit1*10) + bit2;
 210   3      			upward();
 211   3      		}
 212   2      		else if (C1 == 1)         //2 is pressed from Keypad.
 213   2      		{	delay();          //delay fucntion adds delay.
 214   3      			takeInput();
 215   3      			input = (bit1*10) + bit2;
 216   3      			downward();
 217   3      		}
 218   2      		else if (C2 == 1)         //3 is pressed from Keypad.
 219   2      		{	delay();
 220   3      			takeInput();
 221   3      			input = (bit1*10) + bit2;
 222   3      			forward();
 223   3      		}}
 224   1      
 225   1      	else if (R1 == 1){
 226   2      		if (C0 == 1)              //4 is pressed from Keypad.
 227   2      		{	delay();
 228   3      			takeInput();
 229   3      			input = (bit1*10) + bit2;
 230   3      			reverse();
 231   3      		}
 232   2      		else if (C1 == 1)         //5 is pressed from Keypad.
 233   2      		{	delay();
 234   3      			takeInput();
 235   3      			input = (bit1*10) + bit2;
 236   3      			left();
 237   3      		}
 238   2      		else if (C2 == 1)         //6 is pressed from Keypad.
 239   2      		{	delay();
C51 COMPILER V6.12  ROBOTIC_ARM                                                            06/13/2021 20:45:13 PAGE 5   

 240   3      			takeInput();
 241   3      			input = (bit1*10) + bit2;
 242   3      			right();
 243   3      		}}
 244   1      	
 245   1      	else if (R2 == 1){
 246   2      		if (C0 == 1)              //7 is pressed from Keypad.
 247   2      		{	delay();
 248   3      			takeInput();
 249   3      			input = (bit1*10) + bit2;
 250   3      			gripclose();
 251   3      		}
 252   2      		else if (C1 == 1)         //8 is pressed from Keypad.
 253   2      		{	delay();
 254   3      			takeInput();
 255   3      			input = (bit1*10) + bit2;
 256   3      			gripopen();
 257   3      		}
 258   2      		else if (C2 == 0)         //9 is pressed from Keypad.
 259   2      		{}
 260   2      	}
 261   1      	goto start;         //Repeats and goes to start label.
 262   1      }
 263          
 264          void delay()         //Delay Function.
 265          {
 266   1      	unsigned char i,j,k;
 267   1      	for(i=0;i<2;i++)
 268   1      		for(j=0;j<255;j++)
 269   1      	for(k=0;k<255;k++);
 270   1      }
 271          
 272          void upward()         //Upward motion (anti-clockwise rotation) with Servo Motor 1.
 273          {
 274   1      	for (y=0;y<=input;y++)
 275   1      	{
 276   2      		for (x=0;x<=3;x++)
 277   2      		{
 278   3      			P2 = data1[x];
 279   3      			delay();
 280   3      			if (check())
 281   3      			{return;}
 282   3      		}
 283   2      	}
 284   1      }
 285          
 286          void downward()         //Downward motion (clockwise rotation) with Servo Motor 1.
 287          {
 288   1      	for (y=0;y<=input;y++)
 289   1      	{
 290   2      		for (x=0;x<=3;x++)
 291   2      		{
 292   3      			P2 = data2[x];
 293   3      			delay();
 294   3      			if (check())
 295   3      			{return;}
 296   3      		}
 297   2      	}
 298   1      }
 299          
 300          void forward()         //Forward motion (anti-clockwise rotation) with Servo Motor 2.
 301          {
C51 COMPILER V6.12  ROBOTIC_ARM                                                            06/13/2021 20:45:13 PAGE 6   

 302   1      	for (y=0;y<=input;y++)
 303   1      	{
 304   2      		for (x=0;x<=3;x++)
 305   2      		{
 306   3      			P2 = data3[x];
 307   3      			delay();
 308   3      			if (check())
 309   3      			{return;}
 310   3      		}
 311   2      	}
 312   1      }
 313          
 314          void reverse()         //Reverse motion (clockwise rotation) with Servo Motor 2.
 315          {
 316   1      	for (y=0;y<=input;y++)
 317   1      	{
 318   2      		for (x=0;x<=3;x++)
 319   2      		{
 320   3      			P2 = data4[x];
 321   3      			delay();
 322   3      			if (check())
 323   3      			{return;}
 324   3      		}
 325   2      	}
 326   1      }
 327          
 328          
 329          void left()          //Left motion (anti-clockwise rotation) with Servo Motor 3.
 330          {
 331   1      	for (y=0;y<=input;y++)
 332   1      	{
 333   2      		for (x=0;x<=3;x++)
 334   2      		{
 335   3      			P3 = data1[x];
 336   3      			delay();
 337   3      		if (check())
 338   3      			{return;}
 339   3      		}
 340   2      	}
 341   1      }
 342          
 343          void right()        //Right motion (clockwise rotation) with Servo Motor 3.
 344          {
 345   1      	for (y=0;y<=input;y++)
 346   1      	{
 347   2      		for (x=0;x<=3;x++)
 348   2      		{
 349   3      			P3 = data2[x];
 350   3      			delay();
 351   3      			if (check())
 352   3      			{return;}
 353   3      		}
 354   2      	}
 355   1      }
 356          
 357          void gripclose()        //Grip close motion (anti-clockwise rotation) with Servo Motor 4.
 358          {
 359   1      	for (y=0;y<=input;y++)
 360   1      	{
 361   2      		for (x=0;x<=3;x++)
 362   2      		{
 363   3      			P3 = data3[x];
C51 COMPILER V6.12  ROBOTIC_ARM                                                            06/13/2021 20:45:13 PAGE 7   

 364   3      			delay();
 365   3      			if (check())
 366   3      			{return;}
 367   3      		}
 368   2      	}
 369   1      	return;
 370   1      }
 371          
 372          void gripopen()         //Grip open motion (clockwise rotation) with Servo Motor 4.
 373          {
 374   1      	for (y=0;y<=input;y++)
 375   1      	{
 376   2      		for (x=0;x<=3;x++)
 377   2      		{
 378   3      			P3 = data4[x];
 379   3      			delay();
 380   3      			if (check())
 381   3      			{return;}
 382   3      		}
 383   2      	}
 384   1      }
 385          
 386          int check()          //Checks if 9 is pressed from Keypad. If pressed then returns to main.
 387          {
 388   1      	
 389   1      	
 390   1      	if (R2 == 1){
 391   2      		if (C2 == 1)
 392   2      		{return 1;}}
 393   1      	return 0;
 394   1      
 395   1      }
 396          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1202    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     24       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
